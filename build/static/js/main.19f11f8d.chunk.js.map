{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.19f11f8d.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({color, text, onClick}) => {\r\n    return (\r\n    <button \r\n    onClick={onClick} \r\n    style={{ backgroundColor: color }} \r\n    className='btn'\r\n    >\r\n        {text}\r\n    </button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue'\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onAdd, showAdd }) => {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            <Button\r\n                color={showAdd ? 'red' : 'green'}\r\n                text={showAdd ? 'Close' : 'Add'}\r\n                onClick={onAdd}\r\n            />\r\n        </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nexport const Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>\r\n                {task.text}{' '}\r\n                <FaTimes\r\n                    style={{ color: 'red', cursor: 'pointer' }}\r\n                    onClick={() => onDelete(task.id)}\r\n                />\r\n            </h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task\r\n                    key={task.id}\r\n                    task={task}\r\n                    onDelete={onDelete}\r\n                    onToggle={onToggle}\r\n                />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!text) {\r\n            alert('Please add a Task')\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={onSubmit}>\r\n            <div className=\"form-control\">\r\n                <label>Task</label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Add Task\"\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"form-control\">\r\n                <label>Dat & time</label>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Add day & time\"\r\n                    value={day}\r\n                    onChange={(e) => setDay(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"form-control form-control-check\">\r\n                <label>Set reminder</label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={reminder}\r\n                    value={reminder}\r\n                    onChange={(e) => setReminder(e.currentTarget.checked)}\r\n                />\r\n            </div>\r\n\r\n            <input className=\"btn btn-block\" type=\"submit\" value=\"Save Task\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from 'react'\r\nimport Header from './components/Header'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\n\r\nconst App = () => {\r\n    const [showAddTask, setShowAddTask] = useState(false)\r\n    const [tasks, setTasks] = useState([\r\n        {\r\n            id: 1,\r\n            text: 'Food Shopping',\r\n            day: 'Feb 5th at 2:30pm',\r\n            reminder: false,\r\n        },\r\n        {\r\n            id: 2,\r\n            text: 'Food Shopping 2',\r\n            day: 'Feb 5th at 2:30pm',\r\n            reminder: true,\r\n        },\r\n        {\r\n            id: 3,\r\n            text: 'Food Shopping 3',\r\n            day: 'Feb 5th at 2:30pm',\r\n            reminder: false,\r\n        },\r\n    ])\r\n    // Add Task\r\n    const addTask = (task) => {\r\n        const id = Math.floor(Math.random() * 10000) + 1\r\n        const newTask = { id, ...task }\r\n        setTasks([...tasks, newTask])\r\n    }\r\n\r\n    // delete Task\r\n    const deleteTask = (id) => {\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n\r\n    // Toggle reminder\r\n    const toggleReminder = (id) => {\r\n        setTasks(\r\n            tasks.map((task) =>\r\n                task.id === id ? { ...task, reminder: !task.reminder } : task\r\n            )\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\r\n            {showAddTask && <AddTask onAdd={addTask} />}\r\n            {tasks.length > 0 ? (\r\n                <Tasks\r\n                    tasks={tasks}\r\n                    onDelete={deleteTask}\r\n                    onToggle={toggleReminder}\r\n                />\r\n            ) : (\r\n                'No tasks to show!'\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}